halyard:
  gitops:
    enabled: false
  spinnakerVersion: master-latest-unvalidated
  image:
    repository: quay.io/opsmxpublic/halyard
    tag: 1.45.0
  additionalServiceSettings:
    gate.yml:
      healthEndpoint: /health
      kubernetes:
        useExecHealthCheck: false
      artifactId: quay.io/opsmxpublic/gate:nightly-master-oss-ubuntu
    deck.yml:
      artifactId: quay.io/opsmxpublic/deck:nightly-master-oss-ubuntu
    clouddriver-caching.yml:
      artifactId: quay.io/opsmxpublic/clouddriver:nightly-master-oss-ubuntu
    clouddriver.yml:
      artifactId: quay.io/opsmxpublic/clouddriver:nightly-master-oss-ubuntu
    clouddriver-rw.yml:
      artifactId: quay.io/opsmxpublic/clouddriver:nightly-master-oss-ubuntu
    clouddriver-ro.yml:
      artifactId: quay.io/opsmxpublic/clouddriver:nightly-master-oss-ubuntu
    clouddriver-ro-deck.yml:
      artifactId: quay.io/opsmxpublic/clouddriver:nightly-master-oss-ubuntu
    echo.yml:
      artifactId: quay.io/opsmxpublic/echo:nightly-master-oss-ubuntu
    echo-scheduler.yml:
      artifactId: quay.io/opsmxpublic/echo:nightly-master-oss-ubuntu
    echo-worker.yml:
      artifactId: quay.io/opsmxpublic/echo:nightly-master-oss-ubuntu
    fiat.yml:
      artifactId: quay.io/opsmxpublic/fiat:nightly-master-oss-ubuntu
    front50.yml:
      artifactId: quay.io/opsmxpublic/front50:nightly-master-oss-ubuntu
    igor.yml:
      artifactId: quay.io/opsmxpublic/igor:nightly-master-oss-ubuntu
    kayenta.yml:
      artifactId: quay.io/opsmxpublic/kayenta:nightly-master-oss-ubuntu
    orca.yml:
      artifactId: quay.io/opsmxpublic/orca:nightly-master-oss-ubuntu
    rosco.yml:
      artifactId: quay.io/opsmxpublic/rosco:nightly-master-oss-ubuntu
ingress:
  enabled: false
  host: deck.opsmx.net
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/issue-temporary-certificate: "true"
    cert-manager.io/issuer: letsencrypt-oss-spin
    ingress.kubernetes.io/ssl-redirect: 'true'
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  tls:
    - secretName: deck-tls
      hosts:
        - deck.opsmx.net
ingressGate:
  enabled: false
  host: gate.opsmx.net
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/issue-temporary-certificate: "true"
    cert-manager.io/issuer: letsencrypt-oss-spin
    ingress.kubernetes.io/ssl-redirect: 'true'
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  tls:
    - secretName: gate-tls
      hosts:
        - gate.opsmx.net
