name: secret create
on:
  push:
    branches: [ "main" ]
jobs:
  secret:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: Set up environment
        env:
         KUBECONFIG: ${{ secrets.GIT_TOKEN }}
        run: |
        
          TOKEN=${{ secrets.GIT_TOKEN }}
           FILE_PATH=ninja-training-cluster.config
           # to get the public key
           #curl -X GET  -H "Authorization: token $TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/secrets/public-key
     
           curl -X PUT \
          -H "Authorization: token $TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          -d @- \
          "https://api.github.com/repos/${{ github.repository }}/actions/secrets/KUBECONFIGTEST" <<EOF
          {
          "encrypted_value": "$(base64 -w 0 $FILE_PATH)",
          "key_id": "568250167242549743"
           }
          EOF
          
          
         
          echo ${{ secrets.KUBECONFIGTEST }} | base64 --decode
          
          ls -ltra
          
          kubectl get ns 
          
          kubectl get ns --kubeconfig=${{ secrets.KUBECONFIGTEST }}
 
   

      - name: List Secret
        id: list-secrets
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIGTEST }} 
        run: |
          TOKEN=${{ secrets.GIT_TOKEN }}
          REPO=${{ github.repository }}
          
          kubectl get ns 
          
          

          response=$(curl -s -H "Authorization: Bearer $TOKEN" \
            "https://api.github.com/repos/$REPO/actions/secrets")

          secrets=$(echo "$response" | jq -r '.secrets[].name')

          echo "::set-output name=secrets::$secrets"

          

      
 

