name: secret create
on:
  push:
    branches: [ "main" ]
jobs:
  secret:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Set up environment
        run: |
        
          TOKEN=${{ secrets.GIT_TOKEN }}
          ls ${{ github.workspace }} 
          
          # To Create the secrets
          #curl -L -X PUT -H "Accept: application/vnd.github+json" \
          #-H "Authorization: Bearer $TOKEN" \
          #-H "X-GitHub-Api-Version: 2022-11-28" \
          #https://api.github.com/repos/${{ github.repository }}/actions/secrets/Yuga \
          #-d '{"encrypted_value":"aGl2ZmZmZmZmZmZm","key_id": "568250167242549743"}'
          
         
          #cat ninja-training-cluster.config 
                    

           FILE_PATH=ninja-training-cluster.config

       
           curl -X PUT \
          -H "Authorization: token $TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          -d @- \
          "https://api.github.com/repos/${{ github.repository }}/actions/secrets/YUGA" <<EOF
          {
           "encrypted_value": "$(base64 -w 0 $FILE_PATH)",
            "key_id": "568250167242549743"
           }
          EOF
          
          
          echo "getting seceret name"
          
           # To Get the secret name
           curl -H "Accept: application/vnd.github.v3+json" \
           -H "Authorization: Bearer $TOKEN" \
           https://api.github.com/repos/${{ github.repository }}/actions/secrets/YUGA
            
            echo ${{ secrets.YUGA }}
         
          echo ${{ secrets.YUGA }} | base64 --decode > kubeconfig.yaml
          
          cat kubeconfig.yaml
          
          kubectl get ns --kubeconfig=kubeconfig.yaml

      - name: List Secret
        id: list-secrets
        run: |
          TOKEN=${{ secrets.GIT_TOKEN }}
          REPO=${{ github.repository }}

          response=$(curl -s -H "Authorization: Bearer $TOKEN" \
            "https://api.github.com/repos/$REPO/actions/secrets")

          secrets=$(echo "$response" | jq -r '.secrets[].name')

          echo "::set-output name=secrets::$secrets"

          

      
 

