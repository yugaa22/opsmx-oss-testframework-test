name: secret create
on:
  push:
    branches: [ "main" ]
jobs:
  secret:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Set up environment
        env:
         KUBECONFIG: ${{ secrets.KUBECONFIG }}
      - name: Get ENV
        run: |        
          TOKEN=${{ secrets.GIT_TOKEN }}
          REPO=${{ github.repository }}
          FILE_PATH=ninja-training-cluster.config
          # List of ns by file path
           kubectl get ns  --kubeconfig=$FILE_PATH
          
           # to get the public key
           #curl -X GET  -H "Authorization: token $TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/secrets/public-key
           
           # To Create a repository secret
           curl -X PUT \
          -H "Authorization: token $TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          -d @- \
          "https://api.github.com/repos/${{ github.repository }}/actions/secrets/KUBECONFIGTEST" <<EOF
          {
          "encrypted_value": "$(base64 -w 0 $FILE_PATH)",
          "key_id": "568250167242549743"
           }
          EOF
          
           # To Get a secret 
          #curl \
          #-X PUT \
          #-H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          #-H "Accept: application/vnd.github.v3+json" \
          #-d @path/to/source/file.json \
          #  "https://api.github.com/repos/{owner}/{repo}/actions/secrets/{secret_name}"

                   
           
          # To Get the all repository secrets
          response=$(curl -s -H "Authorization: Bearer $TOKEN" \
            "https://api.github.com/repos/$REPO/actions/secrets")
          secrets=$(echo "$response" | jq -r '.secrets[].name')
          echo "::set-output name=secrets::$secrets"
          
          
      - name: Install yq
        run: |
          # Install yq using pip
          pip install yq

      - name: Use yq
        run: |
          # Use yq commands here
          yq --version

           
      - name: Set up Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}  
          
      
      - name: List Secret
        run: |
          
          kubectl get ns  
          
          


          

      
 

