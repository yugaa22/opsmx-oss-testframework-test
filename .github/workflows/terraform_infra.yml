name: 'Terraform Infra'
on:
  workflow_run:
    workflows: ["Workflow 1"]
    types:
      - completed
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
  
jobs:
  terraform_infra:
    name: 'Terraform Infra'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
           cd terraform-Script/aws/eks
           terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
            cd terraform-Script/aws/eks
            terraform plan -input=false 

     # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: |
           cd terraform-Script/aws/eks
           terraform apply -auto-approve -input=false
           ls -lta 
           cat kubefile
           
           echo "Ns from local file"

           kubectl get ns --kubeconfig=kubefile
           
           echo "copying into s3 bucket"
           aws s3 cp kubefile s3://${AWS_BUCKET}/kubefile
         
           #FILE_PATH=kubefile
           TOKEN=${{ secrets.GIT_TOKEN }}
           
           #curl -X PUT \
           #-H "Authorization: token $TOKEN" \
           #-H "Accept: application/vnd.github.v3+json" \
           #-H "Content-Type: application/json" \
           #-d @- \
           #"https://api.github.com/repos/${{ github.repository }}/actions/secrets/KUBECONFIGTEST" <<EOF
           #{
           #"encrypted_value": "$(base64 -w 0 $FILE_PATH)",
            #"key_id": "568250167242549743"
           #}
           #EOF

                    
            echo "copying from s3 bucket"
 
           aws s3 cp s3://${AWS_BUCKET}/kubefile s3_kubefile 
           
                     echo "ns from new bucket"
            kubectl get ns --kubeconfig=s3_kubefile

