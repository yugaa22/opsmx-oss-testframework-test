on:
  push:
    branches:
    - main
    - release-*
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic
jobs:


  build-rosco:
    runs-on: ubuntu-latest
    outputs:
      rosco: ${{ steps.get-build-name.outputs.rosco }}
    if: ${{ true }}
    steps:
    - name: Checkout OpsMx rosco repo
      uses: actions/checkout@v3
      with:
        repository: opsmx/rosco-oes
        ref: refs/heads/OES-1.30.1
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        cache: 'gradle'
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Prepare build variables
      id: build_variables
      run: |
          echo ::set-output name=REPO::"ubi8-rosco-cve"
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
    - name: Build
      run: ./gradlew --no-daemon -PenableCrossCompilerPlugin=true rosco-web:installDist -x test
    - name: Login to Quay
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_KEY }}
    - name: dockerBuildpush
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/ubi8/Dockerfile-dev
        push: true
        tags: |
          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}"
    - id: get-build-name
      run: |
            imageName=${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}
            echo "rosco=$imageName" >> $GITHUB_OUTPUT  
  outputs:
    runs-on: ubuntu-latest
    needs: [build-rosco]
    steps:
    - name: Set up Git config
      run: |
          git config --global user.email "yugaa22@gmail.com"
          git config --global user.name "yugaa22"


    - name: Clone target repo
      run: |
          git clone --depth 1 https://github.com/yugaa22/cve-target.git target-repo

  
    - name: Copy files        
      run: | 
          #ls -ltra
          
          echo artifactId: ${{ needs.build-rosco.outputs.rosco }} > target-repo/default/service-settings/rosco.yml
            
          git add .
          
          git commit -m "updating master Branch images into service settings"
          
          git remote set-url origin https://yugaa22:${{ secrets.GIT_TOKEN }}@github.com/yugaa22/cve-target.git
          
          git push
      env:
         GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
    - run: echo "üçè This job's status is ${{ job.status }}."

