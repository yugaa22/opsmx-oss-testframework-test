on:
  push:
    branches:
    - main
    - release-*
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic
jobs:

  build-igor:
    outputs:
      igor: ${{ steps.get-build-name.outputs.igor }}
    if: ${{ true }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout OpsMx igor repo
      uses: actions/checkout@v3
      with:
        repository: opsmx/igor-oes
        ref: refs/heads/OES-1.30.x
    - name: check for new commits
      if: ${{ (git log --since="$(date) 00:00:00" --format=%H) }}
      run: |           
          echo 'no New commits'
          exit 1
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        cache: 'gradle'
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Prepare build variables
      id: build_variables
      run: |
          echo ::set-output name=REPO::"ubi8-igor-cve"
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
    - name: Build
      run: ./gradlew --no-daemon -PenableCrossCompilerPlugin=true igor-web:installDist -x test
    - name: Login to Quay
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_KEY }}
    - name: dockerBuildpush
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/ubi8/Dockerfile-dev
        push: false
        tags: |
          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}"
    - id: get-build-name
      run: |
            imageName=${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}
            echo "igor=$imageName" >> $GITHUB_OUTPUT
            

  outputs:
    runs-on: ubuntu-latest
    needs: [build-igor]
    steps:
    - name: Che4ck out repository code
      uses: actions/checkout@v3
    - run: | 
          cp bom bom-old
          
          yq ${{ needs.build-echo.outputs.echo }} > bom

          yq ${{ needs.build-igor.outputs.igor }} > bom
          
          #yq e -i '.deploymentConfigurations[0].version = "1.30.1"' config 
 
          git config --global user.email "yugaa22@gmail.com"
          git config --global user.name "yugaa22"
          git add .
          git commit -m "updating master Branch images into service settings"
          git push
      env:
         GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
